function controlSurfaceSimulation(options)
% MATLAB function generated with Fuzzy Logic Designer App.
%
%   This function creates a control surface plot for a fuzzy system.
%
%   Input options is a gensurfOptions object, which specifies a set of
%   parameter values for control surface generation from a fuzzy system
%   with 3 inputs and 1 output.
%
% Date: 02-Oct-2024 15:35:14

if nargin==0
    options = gensurfOptions(...
        InputIndex='auto', ...
        OutputIndex='auto', ...
        NumGridPoints=30, ...
        ReferenceInputs=[NaN, NaN, 0], ...
        NumSamplePoints=101 ...
        );
end

fis = constructFuzzySystem();
gensurf(fis,options);
end

function mamdani_test = constructFuzzySystem()
%% Constructs a fuzzy system.

% Construct FIS
mamdani_test = mamfis(Name="mamdani_test");
% Input 1
mamdani_test = addInput(mamdani_test,[0 10],Name="Load History");
mamdani_test = addMF(mamdani_test,"Load History","trimf",[0 0 6], ...
    Name="Low",VariableType="input");
mamdani_test = addMF(mamdani_test,"Load History","trimf",[0.833333 5 9.16667], ...
    Name="Medium",VariableType="input");
mamdani_test = addMF(mamdani_test,"Load History","trimf",[4 10 10], ...
    Name="High",VariableType="input");
% Input 2
mamdani_test = addInput(mamdani_test,[0 50],Name="Weighted Travel Distance");
mamdani_test = addMF(mamdani_test,"Weighted Travel Distance","trimf",[0 0 30], ...
    Name="Low",VariableType="input");
mamdani_test = addMF(mamdani_test,"Weighted Travel Distance","trimf",[4.16667 25 45.8333], ...
    Name="Medium",VariableType="input");
mamdani_test = addMF(mamdani_test,"Weighted Travel Distance","trimf",[20 50 50], ...
    Name="High",VariableType="input");
% Input 3
mamdani_test = addInput(mamdani_test,[0 2],Name="Capabilities");
mamdani_test = addMF(mamdani_test,"Capabilities","customMF1",0, ...
    Name="No Match",VariableType="input");
mamdani_test = addMF(mamdani_test,"Capabilities","customMF1",1, ...
    Name="One Match",VariableType="input");
mamdani_test = addMF(mamdani_test,"Capabilities","customMF1",2, ...
    Name="Both Match",VariableType="input");
% Output 1
mamdani_test = addOutput(mamdani_test,[0 10],Name="Suitability");
mamdani_test = addMF(mamdani_test,"Suitability","trimf",[-2.08333 0 2.08333], ...
    Name="Very Low",VariableType="output");
mamdani_test = addMF(mamdani_test,"Suitability","trimf",[0.416667 2.5 4.58333], ...
    Name="Low",VariableType="output");
mamdani_test = addMF(mamdani_test,"Suitability","trimf",[2.91667 5 7.08333], ...
    Name="Medium",VariableType="output");
mamdani_test = addMF(mamdani_test,"Suitability","trimf",[5.41667 7.5 9.58333], ...
    Name="High",VariableType="output");
mamdani_test = addMF(mamdani_test,"Suitability","trimf",[7.91667 10 12.0833], ...
    Name="Very High",VariableType="output");
% Rules
mamdani_test = addRule(mamdani_test,[0 0 1 1 1 1; ...
    1 1 2 4 1 1; ...
    2 1 2 3 1 1; ...
    3 1 2 3 1 1; ...
    1 2 2 3 1 1; ...
    2 2 2 3 1 1; ...
    3 2 2 2 1 1; ...
    1 3 2 3 1 1; ...
    2 3 2 2 1 1; ...
    3 3 2 1 1 1; ...
    1 1 3 5 1 1; ...
    2 1 3 4 1 1; ...
    3 1 3 4 1 1; ...
    1 2 3 4 1 1; ...
    2 2 3 4 1 1; ...
    3 2 3 3 1 1; ...
    1 3 3 4 1 1; ...
    2 3 3 3 1 1; ...
    3 3 3 2 1 1; ...
    3 0 2 1 0.5 1; ...
    0 3 2 1 0.5 1; ...
    3 3 2 1 0.5 1; ...
    2 2 2 2 0.5 1; ...
    3 0 3 1 0.5 1; ...
    0 3 3 1 0.5 1; ...
    3 3 3 1 0.5 1; ...
    2 2 3 3 0.5 1]);
end